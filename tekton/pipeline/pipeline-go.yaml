apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: golang-pipeline
spec:
  resources:
    - name: repo
      type: git

  tasks:
  # Run unit test, Security Check and Go Build
    - name: stage-one-go-build
      params:  ## These are the params needed on the Task one
        - name: CGO_ENABLED
          value: "0"
        - name: FLAGS
          value: "-v"
        - name: GOOS
          value: "linux"
        - name: packages
          value: "./..."
        - name: DEST_FOLDER
          value: './cmd/main'
      resources:
        inputs:
          - name: repo
            resource: repo
      taskRef: #Name of the Task Reference
        name: golang-task-one-go-build

     # Build docker image and push to registry
    - name: stage-two-build-and-push
      params: ## These are the params needed on the Task two
          - name: IMAGE_REPO
            value: 'registry.ns0.civo.com/images/golangbackend'
          - name: IMAGE_TAG
            value: '1.0.2'  ## These are the params needed on the Task two
      taskRef:
        name: golang-task-two-docker-build-push
      runAfter: ## With this spec, this task will only run after the stage-one-go-build
        - stage-one-go-build
      resources:
        inputs:
          - name: repo      # name of the Task input (see Task definition)
            resource: repo  # name of the Pipeline resource

---
# Pipeline Run

#apiVersion: tekton.dev/v1beta1
#kind: PipelineRun
#metadata:
#  name: golang-build-pipeline
#spec:
# serviceAccountName: golang-service-account
# pipelineRef:
#    name: golang-pipeline
#  resources:
#  - name: repo
#    resourceRef:
#      name: golang-pipeline-resource