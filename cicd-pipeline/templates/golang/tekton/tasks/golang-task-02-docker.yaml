apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-build-and-push
  namespace: tekton-pipelines
spec:
  params:
    - name: gitbranch
      description: The branch of the repo
  resources:
    inputs:
      - name: repo
        type: git
  steps:

  ## ----------- Task 1 ----------- 
    - name: step-build-and-push
      image: gcr.io/kaniko-project/executor:debug-v0.19.0
      workingDir: /workspace/repo
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
      script: |
         #!/busybox/sh
         echo "Start Docker Build and Push"
         expected=refs/heads/master
         echo Git branch: $(params.gitbranch)
         file=$(echo $expected  $(params.gitbranch) | awk '{ print ($1 == $2) ? "values.yaml" : "values-staging.yaml" }')
         echo Helm Value: $file
         tag=$(awk '/appVersion/' Atlas/Chart.yaml | cut -d':' -f2 | cut -d' ' -f2)
         repo=$(awk '/repo/' Atlas/$file | cut -d':' -f2 | cut -d' ' -f2)
         image=$(awk '/image/' Atlas/$file | cut -d':' -f2 | cut -d' ' -f2)
         imagetag=$repo/$image:$tag
         echo Imagetag to be pushed: $imagetag

         /kaniko/executor --dockerfile Dockerfile  --context `pwd` --destination=$imagetag
         echo "Image Built: " $imagetag
         echo "End Docker Build and Push"
--- 


#apiVersion: tekton.dev/v1beta1
#kind: TaskRun
#metadata:
#  name: taskrun-build-and-push
#spec:
#  serviceAccountName: golang-service-account
#  taskRef:
#    name: golang-task-two-docker-build-push
#  resources:
#    inputs:
#      - name: repo
#        resourceRef:
#          name: golang-pipeline-resource