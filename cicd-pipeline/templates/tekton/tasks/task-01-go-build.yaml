apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: golang-task-one-go-build
spec:
  params:
    - name: CGO_ENABLED
    - name: FLAGS
    - name: GOOS
    - name: packages
      description: "packages to build (default: ./...)"  ## description is optional.
    - name: DEST_FOLDER
      description: destination of main.go

  resources:
    inputs:
      - name: repo
        type: git
  steps:

  ## ----------- Task 1 - Step 1/3 - Run unit test ----------- 
    - name: run-test
      image: golang:alpine
      workingDir: /workspace/repo
      script: |
        echo "Task 1 - Start Golang Unit Test"
        go test $(params.FLAGS) $(params.packages)
        echo "Task 1 - End Golang Unit Test"
      env:
        - name: CGO_ENABLED
          value: "$(params.CGO_ENABLED)"
        - name: GOOS
          value: "$(params.GOOS)"

  ## ----------- Task 1 - Step 2/3 - Security Check  -----------      
    - name: check-security
      image: golang:alpine
      workingDir: /workspace/repo
      script: |
        echo "Task 2 - Start Golang Security Check"
        go get github.com/securego/gosec/v2/cmd/gosec
        gosec $(params.packages)
        echo "Task 2 - End Golang Security Check"

 ## ----------- Task 1 - Step 3/3 - Go Build  ----------- 
    - name: run-build
      image: golang:alpine
      workingDir: /workspace/repo
      script: |
        echo "Task 3 - Start Golang Build"
        go build -o $(params.DEST_FOLDER) $(params.DEST_FOLDER)
        echo "Task 3 - End Golang Build"

---

#apiVersion: tekton.dev/v1beta1
#kind: TaskRun
#metadata:
#  name: golang-taskrun-one-go-build
#spec:
#  taskRef:
#    name: golang-task-one-go-build
#  resources:
#    inputs:
#      - name: repo
#        resourceRef:
#         name: golang-pipeline-resource